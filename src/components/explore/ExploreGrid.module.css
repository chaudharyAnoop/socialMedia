/* Main grid container */
.gridContainer {
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* grid-cols-3 */
  gap: 0.25rem; /* gap-1 (4px) */
  row-gap: 0.25rem; /* gap-1 */
  auto-rows: minmax(0, auto); /* auto-rows-min */
}

/* Tablet / Medium Screens */
@media (min-width: 768px) { /* Corresponds to md: breakpoint */
  .gridContainer {
    grid-template-columns: repeat(4, 1fr); /* md:grid-cols-4 */
    gap: 0.5rem; /* md:gap-2 (8px) */
    row-gap: 0.5rem; /* md:gap-2 */
  }
}

/* Large Screens */
@media (min-width: 1024px) { /* Corresponds to lg: breakpoint */
  .gridContainer {
    grid-template-columns: repeat(6, 1fr); /* lg:grid-cols-6 */
  }
}

/* Base style for each grid item */
.gridItem {
  position: relative; /* relative */
  group-hover: var(--group-hover-selector); /* Custom property for group-hover */
  cursor: pointer; /* cursor-pointer */
  overflow: hidden; /* overflow-hidden */
  border-radius: 0.5rem; /* rounded-lg (8px) */
  background-color: #e5e7eb; /* bg-gray-200 */
}

/* Specific item sizes */
.largeItem {
  grid-column: span 2 / span 2; /* col-span-2 */
  grid-row: span 2 / span 2; /* row-span-2 */
  aspect-ratio: 1 / 1; /* aspect-square */
}

.mediumItem {
  grid-column: span 1 / span 1; /* col-span-1 */
  grid-row: span 2 / span 2; /* row-span-2 */
  aspect-ratio: 4 / 5; /* aspect-[4/5] */
}

.smallItem { /* Default item */
  grid-column: span 1 / span 1; /* col-span-1 */
  grid-row: span 1 / span 1; /* row-span-1 */
  aspect-ratio: 1 / 1; /* aspect-square */
}

/* Image styling */
.gridItem img {
  width: 100%; /* w-full */
  height: 100%; /* h-full */
  object-fit: cover; /* object-cover */
  transition-property: transform; /* transition-transform */
  transition-duration: 300ms; /* duration-300 */
}

.gridItem:hover img {
  transform: scale(1.05); /* group-hover:scale-105 */
}

/* Video indicator */
.videoIndicator {
  position: absolute; /* absolute */
  top: 0.5rem; /* top-2 (8px) */
  right: 0.5rem; /* right-2 (8px) */
  color: #fff; /* text-white */
  fill: #fff; /* fill-white */
}

.videoIndicator svg { /* Targeting the lucide-react icon */
  width: 1rem; /* w-4 (16px) */
  height: 1rem; /* h-4 (16px) */
}


/* Hover overlay */
.hoverOverlay {
  position: absolute; /* absolute */
  inset: 0; /* inset-0 */
  background-color: rgba(0, 0, 0, 0); /* bg-black bg-opacity-0 */
  transition-property: background-color, opacity; /* transition-all */
  transition-duration: 300ms; /* duration-300 */
  display: flex; /* flex */
  align-items: center; /* items-center */
  justify-content: center; /* justify-center */
  opacity: 0; /* opacity-0 */
}

.gridItem:hover .hoverOverlay {
  background-color: rgba(0, 0, 0, 0.3); /* group-hover:bg-opacity-30 */
  opacity: 1; /* group-hover:opacity-100 */
}

.overlayContent {
  display: flex; /* flex */
  align-items: center; /* items-center */
  gap: 1.5rem; /* space-x-6 (24px) */
  color: #fff; /* text-white */
}

/* Like/Comment button base */
.overlayButton {
  display: flex; /* flex */
  align-items: center; /* items-center */
  gap: 0.25rem; /* space-x-1 (4px) */
  transition-property: transform; /* transition-transform */
  transition-duration: 150ms; /* A reasonable default for hover, adjust if needed */
  background: none; /* Remove default button background */
  border: none; /* Remove default button border */
  color: inherit; /* Inherit text color from parent */
  cursor: pointer; /* Add pointer cursor */
  padding: 0; /* Remove default button padding */
}

.overlayButton:hover {
  transform: scale(1.1); /* hover:scale-110 */
}

.overlayButton svg {
  width: 1.25rem; /* w-5 (20px) */
  height: 1.25rem; /* h-5 (20px) */
  fill: #fff; /* fill-white */
}

.overlayButton span {
  font-weight: 600; /* font-semibold */
}